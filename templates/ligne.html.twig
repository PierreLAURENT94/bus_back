{% extends 'base.html.twig' %}

{% block title %}Bus {{ ligne.nom }}{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-sm-12">
            <h1>
                Plan temps réel du
                {% if ligne.nom|slice(0, 1) == 'N' %}
                    noctilien
                {% elseif ligne.nom|number_format >= 20 and ligne.nom|number_format <= 599 %}
                    bus
                {% endif %}
                <mark style="background-color: #{{ ligne.couleurHexa }};color: #{{ ligne.texteCouleurHexa }};">
                    {{ ligne.nom }}
                </mark>
                <small><a href="{{ path('app_liste_lignes') }}">Retour à la liste des lignes de bus</a></small>
            </h1>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="collapse">
                <input type="checkbox" id="collapse-direction1" checked aria-hidden="true">
                <label for="collapse-direction1" aria-hidden="true">
                    <b>{{ arretsDirection1|first["nom"] }} → {{ arretsDirection1|last["nom"] }}</b>
                </label>
                <div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="scroll" style="overflow-x: auto;border:5px solid #000000;background-color: #feeccd;">
                                <canvas id="canvas-direction1" height="300"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="checkbox" id="collapse-direction2" checked aria-hidden="true">
                <label for="collapse-direction2" aria-hidden="true">
                    <b>{{ arretsDirection2|first["nom"] }} → {{ arretsDirection2|last["nom"] }}</b>
                </label>
                <div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="scroll" style="overflow-x: auto;border:5px solid #000000;background-color: #feeccd;">
                                <canvas id="canvas-direction2" height="300"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function plan(ele, busArray, stops, ligneColor, ligneNum) {
            // Clear the canvas
            var canvas = document.getElementById(ele);
            var context = canvas.getContext('2d');
            canvas.width = 90 + stops.length * 150;
            context.clearRect(0, 0, canvas.width, canvas.height);
            
            // Draw "BUS 113" at the top left corner
            {# context.fillStyle = ligneColor; // Text color
            context.font = "35px Arial"; // Font style
            context.globalAlpha = 0.5; // Set opacity to 50%
            context.fillText("BUS "+ ligneNum, 10, 35); // Draw text
            context.globalAlpha = 1; // Set opacity to 50% #}

            // Draw a bus line
            context.beginPath();
            context.moveTo(10, 295); // Starting point
            context.lineTo(10 + (stops.length -1) * 150, 295); // Ending point
            context.strokeStyle = ligneColor; // Line color
            context.lineWidth = 10; // Line width
            context.stroke();
            // Draw white rectangles every 50 pixels
            for (var i = 0; i < stops.length; i++) {
                var x = 10 + i * 150;
                context.fillStyle = "#FFFFFF"; // Rectangle color
                context.fillRect(x - 5, 290, 5, 10); // Draw rectangle
                context.fillStyle = "#000000"; // Rectangle color
                context.globalAlpha = 0.5; // Set opacity to 50%
                context.fillRect(x - 4, 250, 3, 40); // Draw rectangle
                context.globalAlpha = 1.0; // Reset opacity to 100%
                context.fillStyle = "#000000"; // Text color
                context.font = "20px Arial"; // Font style
                context.save(); // Save the current context state
                context.translate(x, 240); // Translate to the text position
                context.rotate(-45 * Math.PI / 180); // Rotate 45 degrees counterclockwise
                var maxLength = 30; // Maximum number of characters to display
                let nom = stops[i].nom + " • " + stops[i].ville;
                var stopName = nom.length > maxLength ? nom.substring(0, maxLength) + "..." : nom;
                context.fillText(stopName, 0, 0); // Draw text
                context.fillStyle = "#AAAAAA"; // Text color for prochainPassage
                next = "N/A";
                if(stops[i].prochainPassage) {
                    next = stops[i].prochainPassage;
                }
                context.fillText(next, 0, 20); // Draw prochainPassage text
                context.restore(); // Restore the context to its original state
            }

            function drawBus(x, y, color) {
                // Draw a bus
                context.globalAlpha = 0.9; // Set opacity to 50%
                context.fillStyle = "#02b59b"; // Bus color
                context.fillRect(x, y, 50, 20); // Draw bus body
                context.fillStyle = color; // Bus color
                context.fillRect(x+20, y+1, 30, 2); // Draw bus body
                context.globalAlpha = 1; // Set opacity to 50%


                // Draw bus windows
                context.fillStyle = "#aae0f9"; // Window color
                context.fillRect(x + 5, y + 5, 10, 10); // First window
                context.fillRect(x + 20, y + 5, 10, 10); // Second window
                context.fillRect(x + 35, y + 5, 10, 10); // Third window

                // feu
                context.fillStyle = "#FFFF00"; // Window color
                context.fillRect(x + 47.5, y + 15, 2.5, 5); // Third window
                context.fillStyle = "#FF0000"; // Window color
                context.fillRect(x, y + 15, 2.5, 5); // Third window

                // Draw bus wheels
                context.beginPath();
                context.arc(x + 10, y + 22.5, 5, 0, 2 * Math.PI); // First wheel
                context.arc(x + 40, y + 22.5, 5, 0, 2 * Math.PI); // Second wheel
                context.fillStyle = "#000000"; // Wheel color
                context.fill();
            }

            busArray.forEach(bus => {
                drawBus(bus.x, bus.y, bus.color);
            });
        }
        

        var busArrayDirection1 = [
            {% for bus in busArrayDirection1 %}
                {
                    x: {{ bus }},
                    y: 262,
                    color: "green"
                },
            {% endfor %}
        ];

        var busArrayDirection2 = [
            {% for bus in busArrayDirection2 %}
                {
                    x: {{ bus }},
                    y: 262,
                    color: "green"
                },
            {% endfor %}
        ];

        {# var busArray = [
            { x: 50, y: 262, color: "green" },
            { x: 150, y: 262, color: "cyan" },
            { x: 250, y: 262, color: "yellow" },
            { x: 250, y: 262, color: "blue" },
            { x: 450, y: 262, color: "red" }
        ]; #}
        var stopsDirection1 = [
            {% for arret in arretsDirection1 %}
                {
                    "nom": "{{ arret['nom'] }}",
                    "ville": "{{ arret['ville'] }}",
                    "prochainPassage": "{{ arret['prochainPassageStr'] }}"
                },
            {% endfor %}
        ];

        var stopsDirection2 = [
            {% for arret in arretsDirection2 %}
                {
                    "nom": "{{ arret['nom'] }}",
                    "ville": "{{ arret['ville'] }}",
                    "prochainPassage": "{{ arret['prochainPassageStr'] }}"
                },
            {% endfor %}
        ];

        {# function moveBuses() {
            busArray.forEach(bus => {
                bus.x += Math.floor(Math.random() * 4) ;
            });
            plan("canvas-direction1",busArray,stopsDirection1, "#{{ ligne.couleurHexa }}", "{{ ligne.nom }} : {{ arretsDirection1|first["nom"] }} → {{ arretsDirection1|last["nom"] }}");
            plan("canvas-direction2",busArray,stopsDirection2, "#{{ ligne.couleurHexa }}", "{{ ligne.nom }} : {{ arretsDirection2|first["nom"] }} → {{ arretsDirection2|last["nom"] }}");
        }

        setInterval(moveBuses, 10); #}
        plan("canvas-direction1",busArrayDirection1,stopsDirection1, "#{{ ligne.couleurHexa }}", "{{ ligne.nom }} : {{ arretsDirection1|first["nom"] }} → {{ arretsDirection1|last["nom"] }}");
        plan("canvas-direction2",busArrayDirection2,stopsDirection2, "#{{ ligne.couleurHexa }}", "{{ ligne.nom }} : {{ arretsDirection2|first["nom"] }} → {{ arretsDirection2|last["nom"] }}");

        setTimeout(function() {
            location.reload();
        }, 30000);
    </script>
{% endblock %}
